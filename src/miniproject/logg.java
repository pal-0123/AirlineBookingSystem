/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniproject;

import java.awt.Point;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.*;
import javax.swing.JOptionPane;
import static miniproject.MiniProject.*;
import java.io.*;
import static miniproject.ex.*;
import static miniproject.login.*;
/**
 *
 * @author pal_0123
 */
class sortDur implements Comparator<flight>{
    public int compare(flight a,flight b){
        int h1,h2,m1,m2;
        if(a.timermin>a.timemin){
            h1=(a.timerhour-a.timehour);
            m1=(a.timermin-a.timemin);
        }
        else{
            h1=(a.timerhour-a.timehour-1);
                    m1=(60+a.timermin-a.timemin);
        }
        if(b.timermin>b.timemin){
            h2=(b.timerhour-b.timehour);
            m2=(b.timermin-b.timemin);
        }
        else{
            h2=(b.timerhour-b.timehour-1);
                    m2=(60+b.timermin-b.timemin);
        }
        if(h1>h2){
            return 1;
        }
        if(h1==h2 && m1>=m2){
            return 1;
        }
        return -1;
    }
}

class sortCoste implements Comparator<flight>{
    public int compare(flight a,flight b){
        return a.cost1-b.cost1;
    }
}

class sortCostb implements Comparator<flight>{
    public int compare(flight a,flight b){
        return a.cost2-b.cost2;
    }
}

public class logg extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public logg() {
        initComponents();
        if(uniid<1000){
            name.setText("Welcome, Guest");
        }
        else{
//            name.setText("Welcome, "+Integer.toString(uniid));
            for(int i=0;i<alluser.size();i++){
                if(alluser.get(i).userid==uniid){
                    name.setText("Welcome, "+alluser.get(i).name);
                    break;
                }
                else{
                    name.setText("Welcome, ");
                }
            }
        }
        
        
        card.removeAll();
        card.repaint();
        card.revalidate();

        card.add(blankCard);
        card.repaint();
        card.revalidate();
//        int n
        
        HashSet<String> temp=new HashSet<>();
        HashSet<String> temp1=new HashSet<>();
        
        int k1=0,k2=0;
        for(int i=0;i<allflight.size();i++){
//            if(!temp.contains(allflight.get(i).from)){
//                s[k1++]=allflight.get(i).from;
                temp.add(allflight.get(i).from);
//            }
//            if(!temp1.contains(allflight.get(i).to)){
//                s1[k2++]=allflight.get(i).to;
                temp1.add(allflight.get(i).to);
//            }
            
            
        }
        String s[]=new String[temp.size()];
        String s1[]=new String[temp1.size()];
        int k=0;
        for(String i:temp){
            s[k++]=i;
        }
        k=0;
        for(String i:temp1){
            s1[k++]=i;
        }
        fromSelect.setModel(new javax.swing.DefaultComboBoxModel<>(s));
        toSelect.setModel(new javax.swing.DefaultComboBoxModel<>(s1));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        card = new javax.swing.JPanel();
        pastBookings = new javax.swing.JPanel();
        prevResult1 = new javax.swing.JButton();
        nextResult1 = new javax.swing.JButton();
        result2P1 = new javax.swing.JPanel();
        booking2To = new javax.swing.JLabel();
        booking2From = new javax.swing.JLabel();
        booking2Arriv = new javax.swing.JLabel();
        booking2Dep = new javax.swing.JLabel();
        booking2Airline = new javax.swing.JLabel();
        booking2Date = new javax.swing.JLabel();
        result1P1 = new javax.swing.JPanel();
        booking1Dep = new javax.swing.JLabel();
        booking1Arriv = new javax.swing.JLabel();
        booking1From = new javax.swing.JLabel();
        booking1To = new javax.swing.JLabel();
        booking1Date = new javax.swing.JLabel();
        booking1Airline = new javax.swing.JLabel();
        result3P1 = new javax.swing.JPanel();
        bookinf3To = new javax.swing.JLabel();
        booking3From = new javax.swing.JLabel();
        booking3Arriv = new javax.swing.JLabel();
        booking3Dep = new javax.swing.JLabel();
        booking3Airline = new javax.swing.JLabel();
        booking3Date = new javax.swing.JLabel();
        bookingCount = new javax.swing.JLabel();
        leave1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        resultPage = new javax.swing.JPanel();
        prevResult = new javax.swing.JButton();
        nextResult = new javax.swing.JButton();
        result1P = new javax.swing.JPanel();
        result1Dep = new javax.swing.JLabel();
        result1Arriv = new javax.swing.JLabel();
        result1Stop = new javax.swing.JLabel();
        result1Dur = new javax.swing.JLabel();
        result1Cost = new javax.swing.JLabel();
        result1LayOver = new javax.swing.JLabel();
        result2P = new javax.swing.JPanel();
        result2Cost = new javax.swing.JLabel();
        result2Dur = new javax.swing.JLabel();
        result2Stop = new javax.swing.JLabel();
        result2Arriv = new javax.swing.JLabel();
        result2Dep = new javax.swing.JLabel();
        result2LayOver = new javax.swing.JLabel();
        result3P = new javax.swing.JPanel();
        result3Cost = new javax.swing.JLabel();
        result3Dur = new javax.swing.JLabel();
        result3Stop = new javax.swing.JLabel();
        result3Arriv = new javax.swing.JLabel();
        result3Dep = new javax.swing.JLabel();
        result3LayOver = new javax.swing.JLabel();
        resultCount = new javax.swing.JLabel();
        leave = new javax.swing.JButton();
        fromResults = new javax.swing.JLabel();
        toResults = new javax.swing.JLabel();
        myAccount = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        userMy = new javax.swing.JLabel();
        newMy = new javax.swing.JLabel();
        confirmMy = new javax.swing.JLabel();
        passMy = new javax.swing.JPasswordField();
        confpassMy = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        blankCard = new javax.swing.JPanel();
        book = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fromSelect = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        toSelect = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        bookDate = new javax.swing.JComboBox<>();
        bookMonth = new javax.swing.JComboBox<>();
        bookYear = new javax.swing.JComboBox<>();
        searchFlightB = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        daySelect = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        ec = new javax.swing.JRadioButton();
        bu = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        cst = new javax.swing.JRadioButton();
        dur = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        hrBook = new javax.swing.JTextField();
        minBook = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        hrBookb = new javax.swing.JTextField();
        minBookb = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jMenuItem6.setText("jMenuItem6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Anouncements");

        name.setText("jLabel6");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(22, 22, 22))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        card.setLayout(new java.awt.CardLayout());

        prevResult1.setText("<");
        prevResult1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevResult1ActionPerformed(evt);
            }
        });

        nextResult1.setText(">");

        booking2To.setText("To: ");

        booking2From.setText("From: ");

        booking2Arriv.setText("Arrival Time: ");

        booking2Dep.setText("Departure Time:");

        booking2Airline.setText("Airline: ");

        booking2Date.setText("Date: ");

        javax.swing.GroupLayout result2P1Layout = new javax.swing.GroupLayout(result2P1);
        result2P1.setLayout(result2P1Layout);
        result2P1Layout.setHorizontalGroup(
            result2P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result2P1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(result2P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(booking2Dep)
                    .addComponent(booking2From)
                    .addComponent(booking2Date))
                .addGap(96, 96, 96)
                .addGroup(result2P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(booking2Airline)
                    .addComponent(booking2To)
                    .addComponent(booking2Arriv))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        result2P1Layout.setVerticalGroup(
            result2P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result2P1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(result2P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking2From)
                    .addComponent(booking2To))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(result2P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking2Dep)
                    .addComponent(booking2Arriv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(result2P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking2Date)
                    .addComponent(booking2Airline))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        booking1Dep.setText("Departure Time:");

        booking1Arriv.setText("Arrival Time: ");

        booking1From.setText("From: ");

        booking1To.setText("To: ");

        booking1Date.setText("Date: ");

        booking1Airline.setText("Airline: ");

        javax.swing.GroupLayout result1P1Layout = new javax.swing.GroupLayout(result1P1);
        result1P1.setLayout(result1P1Layout);
        result1P1Layout.setHorizontalGroup(
            result1P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result1P1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(result1P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(booking1Dep)
                    .addComponent(booking1From)
                    .addComponent(booking1Date))
                .addGap(96, 96, 96)
                .addGroup(result1P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(booking1Airline)
                    .addComponent(booking1To)
                    .addComponent(booking1Arriv))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        result1P1Layout.setVerticalGroup(
            result1P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result1P1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(result1P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking1From)
                    .addComponent(booking1To))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(result1P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking1Dep)
                    .addComponent(booking1Arriv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(result1P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking1Date)
                    .addComponent(booking1Airline)))
        );

        bookinf3To.setText("To: ");

        booking3From.setText("From: ");

        booking3Arriv.setText("Arrival Time: ");

        booking3Dep.setText("Departure Time:");

        booking3Airline.setText("Airline: ");

        booking3Date.setText("Date: ");

        javax.swing.GroupLayout result3P1Layout = new javax.swing.GroupLayout(result3P1);
        result3P1.setLayout(result3P1Layout);
        result3P1Layout.setHorizontalGroup(
            result3P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result3P1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(result3P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(booking3Dep)
                    .addComponent(booking3From)
                    .addComponent(booking3Date))
                .addGap(96, 96, 96)
                .addGroup(result3P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(booking3Airline)
                    .addComponent(bookinf3To)
                    .addComponent(booking3Arriv))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        result3P1Layout.setVerticalGroup(
            result3P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result3P1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(result3P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking3From)
                    .addComponent(bookinf3To))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(result3P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking3Dep)
                    .addComponent(booking3Arriv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(result3P1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booking3Date)
                    .addComponent(booking3Airline))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bookingCount.setText("Bookings: ");

        leave1.setText("Leave");
        leave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leave1ActionPerformed(evt);
            }
        });

        jLabel10.setText("User: ");

        javax.swing.GroupLayout pastBookingsLayout = new javax.swing.GroupLayout(pastBookings);
        pastBookings.setLayout(pastBookingsLayout);
        pastBookingsLayout.setHorizontalGroup(
            pastBookingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pastBookingsLayout.createSequentialGroup()
                .addComponent(prevResult1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bookingCount)
                .addGap(92, 92, 92)
                .addComponent(nextResult1))
            .addComponent(result1P1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(result3P1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pastBookingsLayout.createSequentialGroup()
                .addComponent(leave1)
                .addGap(84, 84, 84)
                .addComponent(jLabel10)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(result2P1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pastBookingsLayout.setVerticalGroup(
            pastBookingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pastBookingsLayout.createSequentialGroup()
                .addGroup(pastBookingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leave1)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addComponent(result1P1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(result2P1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(result3P1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(pastBookingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevResult1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextResult1)
                    .addComponent(bookingCount)))
        );

        card.add(pastBookings, "card4");

        prevResult.setText("<");
        prevResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevResultActionPerformed(evt);
            }
        });

        nextResult.setText(">");
        nextResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextResultActionPerformed(evt);
            }
        });

        result1P.setBackground(new java.awt.Color(0, 204, 204));
        result1P.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                result1PMouseClicked(evt);
            }
        });

        result1Dep.setText("Departure Time:");

        result1Arriv.setText("Arrival Time: ");

        result1Stop.setText("Stops: ");

        result1Dur.setText("Duration: ");

        result1Cost.setText("Cost: ");

        result1LayOver.setText("LayOver: ");

        javax.swing.GroupLayout result1PLayout = new javax.swing.GroupLayout(result1P);
        result1P.setLayout(result1PLayout);
        result1PLayout.setHorizontalGroup(
            result1PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result1PLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(result1PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(result1Dep)
                    .addComponent(result1Stop)
                    .addComponent(result1Cost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(result1PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(result1Arriv)
                    .addComponent(result1Dur)
                    .addComponent(result1LayOver))
                .addGap(101, 101, 101))
        );
        result1PLayout.setVerticalGroup(
            result1PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result1PLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(result1PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result1Dep)
                    .addComponent(result1Arriv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(result1PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result1Stop)
                    .addComponent(result1Dur))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(result1PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result1Cost)
                    .addComponent(result1LayOver))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        result2P.setBackground(new java.awt.Color(204, 204, 0));
        result2P.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                result2PMouseClicked(evt);
            }
        });

        result2Cost.setText("Cost: ");

        result2Dur.setText("Duration: ");

        result2Stop.setText("Stops: ");

        result2Arriv.setText("Arrival Time: ");

        result2Dep.setText("Departure Time:");

        result2LayOver.setText("LayOver: ");

        javax.swing.GroupLayout result2PLayout = new javax.swing.GroupLayout(result2P);
        result2P.setLayout(result2PLayout);
        result2PLayout.setHorizontalGroup(
            result2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result2PLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(result2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(result2Dep)
                    .addComponent(result2Stop)
                    .addComponent(result2Cost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(result2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(result2Arriv)
                    .addComponent(result2Dur)
                    .addComponent(result2LayOver))
                .addGap(101, 101, 101))
        );
        result2PLayout.setVerticalGroup(
            result2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result2PLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(result2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result2Dep)
                    .addComponent(result2Arriv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(result2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result2Stop)
                    .addComponent(result2Dur))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(result2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result2Cost)
                    .addComponent(result2LayOver))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        result3P.setBackground(new java.awt.Color(0, 204, 204));
        result3P.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                result3PMouseClicked(evt);
            }
        });

        result3Cost.setText("Cost: ");

        result3Dur.setText("Duration: ");

        result3Stop.setText("Stops: ");

        result3Arriv.setText("Arrival Time: ");

        result3Dep.setText("Departure Time:");

        result3LayOver.setText("LayOver: ");

        javax.swing.GroupLayout result3PLayout = new javax.swing.GroupLayout(result3P);
        result3P.setLayout(result3PLayout);
        result3PLayout.setHorizontalGroup(
            result3PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result3PLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(result3PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(result3Dep)
                    .addComponent(result3Stop)
                    .addComponent(result3Cost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(result3PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(result3Arriv)
                    .addComponent(result3Dur)
                    .addComponent(result3LayOver))
                .addGap(101, 101, 101))
        );
        result3PLayout.setVerticalGroup(
            result3PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result3PLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(result3PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result3Dep)
                    .addComponent(result3Arriv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(result3PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result3Stop)
                    .addComponent(result3Dur))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(result3PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result3Cost)
                    .addComponent(result3LayOver))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        resultCount.setText("Result: ");

        leave.setText("Leave");
        leave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveActionPerformed(evt);
            }
        });

        fromResults.setText("From: ");

        toResults.setText("To: ");

        javax.swing.GroupLayout resultPageLayout = new javax.swing.GroupLayout(resultPage);
        resultPage.setLayout(resultPageLayout);
        resultPageLayout.setHorizontalGroup(
            resultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPageLayout.createSequentialGroup()
                .addComponent(prevResult)
                .addGap(116, 116, 116)
                .addComponent(resultCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nextResult))
            .addComponent(result1P, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(result2P, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(result3P, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(resultPageLayout.createSequentialGroup()
                .addComponent(leave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fromResults)
                .addGap(91, 91, 91)
                .addComponent(toResults)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        resultPageLayout.setVerticalGroup(
            resultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPageLayout.createSequentialGroup()
                .addGroup(resultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leave)
                    .addComponent(fromResults)
                    .addComponent(toResults))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(result1P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(result2P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(result3P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(resultPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevResult, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextResult)
                    .addComponent(resultCount)))
        );

        card.add(resultPage, "card4");

        jLabel9.setText("Change Password");

        userMy.setText("User: ");

        newMy.setText("New Password: ");

        confirmMy.setText("Confirm Password: ");

        jButton2.setText("Change");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout myAccountLayout = new javax.swing.GroupLayout(myAccount);
        myAccount.setLayout(myAccountLayout);
        myAccountLayout.setHorizontalGroup(
            myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(userMy)
                    .addGroup(myAccountLayout.createSequentialGroup()
                        .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newMy)
                            .addComponent(confirmMy))
                        .addGap(25, 25, 25)
                        .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2)
                            .addComponent(confpassMy, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(passMy))))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        myAccountLayout.setVerticalGroup(
            myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myAccountLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(userMy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newMy)
                    .addComponent(passMy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmMy)
                    .addComponent(confpassMy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(251, Short.MAX_VALUE))
        );

        card.add(myAccount, "card6");

        blankCard.setBackground(new java.awt.Color(0, 204, 204));

        javax.swing.GroupLayout blankCardLayout = new javax.swing.GroupLayout(blankCard);
        blankCard.setLayout(blankCardLayout);
        blankCardLayout.setHorizontalGroup(
            blankCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 412, Short.MAX_VALUE)
        );
        blankCardLayout.setVerticalGroup(
            blankCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );

        card.add(blankCard, "card3");

        book.setBackground(new java.awt.Color(0, 204, 204));

        jLabel2.setText("Book Tickets");

        jLabel3.setText("From: ");

        fromSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("To: ");

        toSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Date(DD/MM/YYYY):");

        bookDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        bookDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookDateActionPerformed(evt);
            }
        });

        bookMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        bookYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020" }));

        searchFlightB.setText("Search");
        searchFlightB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFlightBActionPerformed(evt);
            }
        });

        jLabel8.setText("Day: ");

        daySelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }));

        jButton1.setText("Leave");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Class: ");

        ec.setBackground(new java.awt.Color(0, 204, 204));
        buttonGroup1.add(ec);
        ec.setText("Economy");

        bu.setBackground(new java.awt.Color(0, 204, 204));
        buttonGroup1.add(bu);
        bu.setText("Business");
        bu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buActionPerformed(evt);
            }
        });

        jLabel7.setText("Sort By: ");

        cst.setBackground(new java.awt.Color(0, 204, 204));
        buttonGroup2.add(cst);
        cst.setText("Cost");

        dur.setBackground(new java.awt.Color(0, 204, 204));
        buttonGroup2.add(dur);
        dur.setText("Duration");

        jLabel11.setText("Time after(Hr:Min): ");

        hrBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrBookActionPerformed(evt);
            }
        });

        minBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minBookActionPerformed(evt);
            }
        });

        jLabel12.setText("Time Before(Hr:Min):");

        hrBookb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrBookbActionPerformed(evt);
            }
        });

        minBookb.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                minBookbCaretUpdate(evt);
            }
        });
        minBookb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minBookbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookLayout = new javax.swing.GroupLayout(book);
        book.setLayout(bookLayout);
        bookLayout.setHorizontalGroup(
            bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookLayout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(bookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookLayout.createSequentialGroup()
                        .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(daySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bookLayout.createSequentialGroup()
                                .addComponent(bookDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bookMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bookYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchFlightB, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bookLayout.createSequentialGroup()
                                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ec)
                                    .addComponent(cst)
                                    .addComponent(hrBook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dur)
                                    .addComponent(bu)
                                    .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(minBookb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                                        .addComponent(minBook))))))
                    .addGroup(bookLayout.createSequentialGroup()
                        .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(bookLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fromSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bookLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hrBookb, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        bookLayout.setVerticalGroup(
            bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(35, 35, 35)
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(toSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fromSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(bookDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(daySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ec)
                    .addComponent(bu))
                .addGap(18, 18, 18)
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cst)
                        .addComponent(dur)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(hrBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(hrBookb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minBookb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(searchFlightB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        card.add(book, "card2");

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 0));

        jMenu1.setText("File");

        jMenuItem7.setText("Logout");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Flight Tickets");

        jMenuItem1.setText("View Tickets");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem5.setText("Book Tickets");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("My Account");

        jMenuItem3.setText("View Past Bookings");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("Account");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(card, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(card, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        card.removeAll();
        card.repaint();
        card.revalidate();

        card.add(book);
        card.repaint();
        card.revalidate();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        if(uniid>900){
            card.removeAll();
            card.repaint();
            card.revalidate();

            card.add(pastBookings);
            card.repaint();
            card.revalidate();
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        if(uniid>900){
            card.removeAll();
            card.repaint();
            card.revalidate();

            card.add(myAccount);
            card.repaint();
            card.revalidate();
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void bookDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookDateActionPerformed

    private void prevResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevResultActionPerformed
        // TODO add your handling code here:
        count-=3;
        displayResults();
    }//GEN-LAST:event_prevResultActionPerformed

    private void leaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveActionPerformed
        // TODO add your handling code here:
        card.removeAll();
        card.repaint();
        card.revalidate();

        card.add(book);
        card.repaint();
        card.revalidate();
    }//GEN-LAST:event_leaveActionPerformed

    private void prevResult1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevResult1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prevResult1ActionPerformed

    private void leave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leave1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leave1ActionPerformed
    
    void displayResults(){
        if(count<0){
            count =0;
        }
        resultCount.setText("Results: "+Integer.toString(resultsDirect.size()));
        int z=0;
        for(int i=count;i<resultsDirect.size();i++){
            z=(i-count+1);
            if(z==1){
                result1Dep.setText("Departure Time: "+Integer.toString(resultsDirect.get(i).timehour)+":"+Integer.toString(resultsDirect.get(i).timemin));
                result1Arriv.setText("Arrival Time: "+Integer.toString(resultsDirect.get(i).timerhour)+":"+Integer.toString(resultsDirect.get(i).timermin));
                result1Stop.setText("Stops: NonStop");
                result1Dur.setText("Duration: "+resultsDirect.get(i).dur);
                if(bu.isSelected()){
                    result1Cost.setText("Cost: "+Integer.toString(resultsDirect.get(i).cost2));
                }
                else{
                    result1Cost.setText("Cost: "+Integer.toString(resultsDirect.get(i).cost1));
                }
                
                result1LayOver.setText("");
                if(uniid>900)p1=i;
            }
            if(z==2){
                result2Dep.setText("Departure Time: "+Integer.toString(resultsDirect.get(i).timehour)+":"+Integer.toString(resultsDirect.get(i).timemin));
                result2Arriv.setText("Arrival Time: "+Integer.toString(resultsDirect.get(i).timerhour)+":"+Integer.toString(resultsDirect.get(i).timermin));
                result2Stop.setText("Stops: NonStop");
                result2Dur.setText("Duration: "+resultsDirect.get(i).dur);
                if(bu.isSelected()){
                    result2Cost.setText("Cost: "+Integer.toString(resultsDirect.get(i).cost2));
                }
                else{
                    result2Cost.setText("Cost: "+Integer.toString(resultsDirect.get(i).cost1));
                }
                result2LayOver.setText("");
                if(uniid>900)p2=i;
            }
            if(z==3){
                result3Dep.setText("Departure Time: "+Integer.toString(resultsDirect.get(i).timehour)+":"+Integer.toString(resultsDirect.get(i).timemin));
                result3Arriv.setText("Arrival Time: "+Integer.toString(resultsDirect.get(i).timerhour)+":"+Integer.toString(resultsDirect.get(i).timermin));
                result3Stop.setText("Stops: NonStop");
                result3Dur.setText("Duration: "+resultsDirect.get(i).dur);
                result3Cost.setText("Cost: "+Integer.toString(3000));
                result3LayOver.setText("");
                if (bu.isSelected()) {
                    result3Cost.setText("Cost: " + Integer.toString(resultsDirect.get(i).cost2));
                } else {
                    result3Cost.setText("Cost: " + Integer.toString(resultsDirect.get(i).cost1));
                }
                if(uniid>900)p3=i;
            }
        }
        for(int i=z+1;i<4;i++){
            if(i==1){
                result1Dep.setText("");
                result1Arriv.setText("");
                result1Stop.setText("");
                result1Dur.setText("");
                result1Cost.setText("");
                result1LayOver.setText("");
                p1=-1;
            }
            if(i==2){
                result2Dep.setText("");
                result2Arriv.setText("");
                result2Stop.setText("");
                result2Dur.setText("");
                result2Cost.setText("");
                result2LayOver.setText("");
                p2=-1;
            }
            if(i==3){
                result3Dep.setText("");
                result3Arriv.setText("");
                result3Stop.setText("");
                result3Dur.setText("");
                result3Cost.setText("");
                result3LayOver.setText("");
                p3=-1;
            }
        }
    }
    void makeResultsDirect(String from,String to,int day){
        resultsDirect.clear();
        fromResults.setText("From: "+from);
        toResults.setText("To: "+to);
        int hr,min;
        try{
            hr=(Integer.parseInt((String)hrBook.getText()));
            min=(Integer.parseInt((String)minBook.getText()));
        }
        catch(Exception e){
            hr=0;
            min=0;
        }
        int hrb,minb;
        try{
            hrb=(Integer.parseInt((String)hrBookb.getText()));
            minb=(Integer.parseInt((String)minBookb.getText()));
        }
        catch(Exception e){
            hrb=24;
            minb=60;
        }
        
        
        for(int i=0;i<allflight.size();i++){
            if(allflight.get(i).from.equals(from) && allflight.get(i).to.equals(to) && allflight.get(i).days.charAt(day)=='1'){
                if(allflight.get(i).timehour>hr){
                    if(allflight.get(i).timerhour<hrb){
                        resultsDirect.add(allflight.get(i));
                    }
                    else if(allflight.get(i).timerhour==hrb && allflight.get(i).timermin<minb){
                        resultsDirect.add(allflight.get(i));
                    }
                    
                }
                else if(allflight.get(i).timehour==hr && allflight.get(i).timemin>min){
                    if (allflight.get(i).timerhour < hrb) {
                        resultsDirect.add(allflight.get(i));
                    } else if (allflight.get(i).timerhour == hrb && allflight.get(i).timermin < minb) {
                        resultsDirect.add(allflight.get(i));
                    }
                }
                
            }
        }
        if(cst.isSelected()){
            if(bu.isSelected()){
                Collections.sort(resultsDirect, new sortCostb());
            }
            else{
                Collections.sort(resultsDirect, new sortCoste());
            }
        }
        else{
            Collections.sort(resultsDirect, new sortDur());
        }
        
    }
    void makeResultsIndirect(String from,String to,int day){
        resultIndirect.clear();
        for(int i=0;i<allflight.size();i++){
            if(allflight.get(i).from.equals(from) && (!allflight.get(i).to.equals(to))&& allflight.get(i).days.charAt(day)=='1'){
//                resultsDirect.add(allflight.get(i));
                for(int j=0;j<allflight.size();j++){
                    if(i!=j && allflight.get(j).to.equals(to) && allflight.get(i).to.equals(allflight.get(j))&& allflight.get(i).days.charAt(day)=='1'){
                        int thr=0,tmin=0;
//                        get Duration of combined flight
                        resultIndirect.add(new flightPair(allflight.get(i),allflight.get(j),thr,tmin));
                    }
                }
            }
        }
    }
    private void searchFlightBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFlightBActionPerformed
        // TODO add your handling code here:
        String from=(String)fromSelect.getSelectedItem();
        String to=(String)toSelect.getSelectedItem();
        int date=bookDate.getSelectedIndex()+1;
        int month=bookMonth.getSelectedIndex()+1;
        int year=bookYear.getSelectedIndex();
        int daysel=daySelect.getSelectedIndex();
        
        if(checkdate(date,month,year)){
            JOptionPane.showMessageDialog(null, "Invalid date");
        }
        else if(from.equals(to)){
            JOptionPane.showMessageDialog(null, "Source and Destination cannot be same");
        }
        else{
//            String 
            makeResultsDirect(from,to,daysel);
            makeResultsIndirect(from,to,daysel);
            card.removeAll();
            card.repaint();
            card.revalidate();

            card.add(resultPage);
            card.repaint();
            card.revalidate();
            displayResults();
        }
    }//GEN-LAST:event_searchFlightBActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        card.removeAll();
        card.repaint();
        card.revalidate();

        card.add(book);
        card.repaint();
        card.revalidate();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void nextResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextResultActionPerformed
        // TODO add your handling code here:
        count+=3;
        displayResults();
    }//GEN-LAST:event_nextResultActionPerformed
    
    private void result1PMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_result1PMouseClicked
        // TODO add your handling code here:
//        ex tempnn=new ex();
//        new ex().setVisible(true);
        if(p1!=-1){
            if(bu.isSelected()){
                cost=allflight.get(p1).cost2;
                seatchoice=2;
                System.out.println("bhai");

            }
            else{
                cost=allflight.get(p1).cost1;
                seatchoice=1;
                System.out.println("bhai");

            }
            flightselect=p1;
//            if(bu.isSelected())
            new noofpass().setVisible(true);
        }
    }//GEN-LAST:event_result1PMouseClicked

    private void result2PMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_result2PMouseClicked
        // TODO add your handling code here:
        ex tempnn=new ex();
        if(p2!=-1){
            if(bu.isSelected()){
                cost=allflight.get(p2).cost2;
                seatchoice=2;
            }
            else{
                cost=allflight.get(p2).cost1;
                seatchoice=1;
            }
            flightselect=p2;
            new noofpass().setVisible(true);
        }
    }//GEN-LAST:event_result2PMouseClicked

    private void result3PMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_result3PMouseClicked
        // TODO add your handling code here:
        ex tempnn=new ex();
        if(p3!=-1){
            if(bu.isSelected()){
                cost=allflight.get(p3).cost2;
                seatchoice=2;
            }
            else{
                cost=allflight.get(p3).cost1;
                seatchoice=1;
            }
            flightselect=p3;
            new noofpass().setVisible(true);
        }
    }//GEN-LAST:event_result3PMouseClicked

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        new home().setVisible(true);
        setVisible(false);
        uniid=-1;
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        card.removeAll();
        card.repaint();
        card.revalidate();

        card.add(blankCard);
        card.repaint();
        card.revalidate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void buActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<alluser.size();i++){
            if(alluser.get(i).userid==uniid){
                char pass[] = passMy.getPassword();
                char confpass[] = confpassMy.getPassword();
                if(match(pass,confpass)){
                    JOptionPane.showMessageDialog(null, "Invalid Input");
                }
                else{
                    alluser.get(i).password=passString(pass);
                    JOptionPane.showMessageDialog(null, "Change Successful");
                }
                return ;
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void minBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minBookActionPerformed

    private void hrBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hrBookActionPerformed

    private void hrBookbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrBookbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hrBookbActionPerformed

    private void minBookbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minBookbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minBookbActionPerformed

    private void minBookbCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_minBookbCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_minBookbCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(logg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(logg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(logg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(logg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new logg().setVisible(true);
            }
        });
    }
    
    static int count=0;
    static int p1=-1,p2=-1,p3=-1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel blankCard;
    private javax.swing.JPanel book;
    private javax.swing.JComboBox<String> bookDate;
    private javax.swing.JComboBox<String> bookMonth;
    private javax.swing.JComboBox<String> bookYear;
    private javax.swing.JLabel bookinf3To;
    private javax.swing.JLabel booking1Airline;
    private javax.swing.JLabel booking1Arriv;
    private javax.swing.JLabel booking1Date;
    private javax.swing.JLabel booking1Dep;
    private javax.swing.JLabel booking1From;
    private javax.swing.JLabel booking1To;
    private javax.swing.JLabel booking2Airline;
    private javax.swing.JLabel booking2Arriv;
    private javax.swing.JLabel booking2Date;
    private javax.swing.JLabel booking2Dep;
    private javax.swing.JLabel booking2From;
    private javax.swing.JLabel booking2To;
    private javax.swing.JLabel booking3Airline;
    private javax.swing.JLabel booking3Arriv;
    private javax.swing.JLabel booking3Date;
    private javax.swing.JLabel booking3Dep;
    private javax.swing.JLabel booking3From;
    private javax.swing.JLabel bookingCount;
    private javax.swing.JRadioButton bu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel card;
    private javax.swing.JLabel confirmMy;
    private javax.swing.JPasswordField confpassMy;
    private javax.swing.JRadioButton cst;
    private javax.swing.JComboBox<String> daySelect;
    private javax.swing.JRadioButton dur;
    private javax.swing.JRadioButton ec;
    private javax.swing.JLabel fromResults;
    private javax.swing.JComboBox<String> fromSelect;
    private javax.swing.JTextField hrBook;
    private javax.swing.JTextField hrBookb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton leave;
    private javax.swing.JButton leave1;
    private javax.swing.JTextField minBook;
    private javax.swing.JTextField minBookb;
    private javax.swing.JPanel myAccount;
    private javax.swing.JLabel name;
    private javax.swing.JLabel newMy;
    private javax.swing.JButton nextResult;
    private javax.swing.JButton nextResult1;
    private javax.swing.JPasswordField passMy;
    private javax.swing.JPanel pastBookings;
    private javax.swing.JButton prevResult;
    private javax.swing.JButton prevResult1;
    private javax.swing.JLabel result1Arriv;
    private javax.swing.JLabel result1Cost;
    private javax.swing.JLabel result1Dep;
    private javax.swing.JLabel result1Dur;
    private javax.swing.JLabel result1LayOver;
    private javax.swing.JPanel result1P;
    private javax.swing.JPanel result1P1;
    private javax.swing.JLabel result1Stop;
    private javax.swing.JLabel result2Arriv;
    private javax.swing.JLabel result2Cost;
    private javax.swing.JLabel result2Dep;
    private javax.swing.JLabel result2Dur;
    private javax.swing.JLabel result2LayOver;
    private javax.swing.JPanel result2P;
    private javax.swing.JPanel result2P1;
    private javax.swing.JLabel result2Stop;
    private javax.swing.JLabel result3Arriv;
    private javax.swing.JLabel result3Cost;
    private javax.swing.JLabel result3Dep;
    private javax.swing.JLabel result3Dur;
    private javax.swing.JLabel result3LayOver;
    private javax.swing.JPanel result3P;
    private javax.swing.JPanel result3P1;
    private javax.swing.JLabel result3Stop;
    private javax.swing.JLabel resultCount;
    private javax.swing.JPanel resultPage;
    private javax.swing.JToggleButton searchFlightB;
    private javax.swing.JLabel toResults;
    private javax.swing.JComboBox<String> toSelect;
    private javax.swing.JLabel userMy;
    // End of variables declaration//GEN-END:variables
}
